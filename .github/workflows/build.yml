name: build
on:
  workflow_run:
    workflows:
      - lint
    branches:
      - main
    types:
      - completed

jobs:
  can-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Make Fail if the Workflows Was Failed
        if: github.event.workflow_run.conclusion != 'success'
        run: |
          echo '::error::the workflows was failed'
          exit 1
  deploy:
    runs-on: ubuntu-latest
    needs:
      - can-deploy
    steps:
      # install
      # - name: Checkout
      #   uses: actions/checkout@v2
      #   with:
      #     token: ${{ secrets.GITHUB_TOKEN_SEMANTIC_RELEASE }}
      - if: github.event.pull_request.head.repo.full_name == github.repository
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN_SEMANTIC_RELEASE }}
      - if: github.event.pull_request.head.repo.full_name != github.repository
        uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "14"
      - name: Get Yarn Cache Directory Path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install npm
        run: |
            yarn --frozen-lockfile
      # deploy
      - name: Build a Project
        run: |
          npm run build
      - name: Create a Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npx semantic-release
          # npm run release
      - name: Deploy to Production
        run: |
          echo 'Deploy to Production'
          # npm run deploy
